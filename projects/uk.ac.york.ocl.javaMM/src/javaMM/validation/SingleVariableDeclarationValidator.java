/**
 *
 * $Id$
 */
package javaMM.validation;

import javaMM.AbstractMethodDeclaration;
import javaMM.Annotation;
import javaMM.CatchClause;
import javaMM.EnhancedForStatement;
import javaMM.Modifier;
import javaMM.TypeAccess;

import org.eclipse.emf.common.util.EList;

/**
 * A sample validator interface for {@link javaMM.SingleVariableDeclaration}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface SingleVariableDeclarationValidator {
	boolean validate();

	boolean validateModifier(Modifier value);
	boolean validateVarargs(boolean value);
	boolean validateType(TypeAccess value);
	boolean validateAnnotations(EList<Annotation> value);
	boolean validateMethodDeclaration(AbstractMethodDeclaration value);
	boolean validateCatchClause(CatchClause value);
	boolean validateEnhancedForStatement(EnhancedForStatement value);
}
